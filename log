Fri 14 Oct 2022 04:45:21 PM UTC: 
 tests:  0|4
total_score: 0/70
19bff1a
Fri 14 Oct 2022 04:51:52 PM UTC: 
 heap.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘createHeap’:
heap.c:42:16: error: unused variable ‘array’ [-Werror=unused-variable]
   42 |     heapElem * array = (heapElem*)calloc(3,sizeof(heapElem)) ;
      |                ^~~~~
cc1: all warnings being treated as errors
Compilation failed
72e0642
Fri 14 Oct 2022 04:52:19 PM UTC: 
 heap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  1|3
total_score: 10/70
3ea39d2
Fri 14 Oct 2022 04:58:50 PM UTC: 
 heap.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_top’:
heap.c:23:23: error: incompatible types when initializing type ‘heapElem *’ {aka ‘struct nodo *’} using type ‘heapElem’ {aka ‘struct nodo’}
   23 |     heapElem * dato = pq->heapArray[0];
      |                       ^~
Compilation failed
9a9aae5
Fri 14 Oct 2022 04:59:30 PM UTC: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_top’:
heap.c:24:16: error: incompatible types when returning type ‘heapElem’ {aka ‘struct nodo’} but ‘void *’ was expected
   24 |     return dato[0];
      |            ~~~~^~~
heap.c:25:1: error: control reaches end of non-void function [-Werror=return-type]
   25 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
fc71f86
Fri 14 Oct 2022 04:59:56 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_top’:
heap.c:24:19: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   24 |     return dato[0]->data;
      |                   ^~
heap.c:25:1: error: control reaches end of non-void function [-Werror=return-type]
   25 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
b5abf5f
Fri 14 Oct 2022 05:00:02 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|3
total_score: 10/70
c89ec76
Fri 14 Oct 2022 05:00:54 PM UTC: 
 heap.c | 3 +++
 1 file changed, 3 insertions(+)
In file included from test.c:4:
heap.c: In function ‘heap_top’:
heap.c:24:15: error: invalid operands to binary == (have ‘heapElem’ {aka ‘struct nodo’} and ‘void *’)
   24 |     if(dato[0]==NULL){
      |        ~~~~~~~^~
      |            |
      |            heapElem {aka struct nodo}
Compilation failed
989835c
Fri 14 Oct 2022 05:01:05 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|3
total_score: 10/70
66e07f7
Fri 14 Oct 2022 05:01:31 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_top’:
heap.c:24:8: error: ‘size’ undeclared (first use in this function)
   24 |     if(size==0){
      |        ^~~~
heap.c:24:8: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
06f7ecc
Fri 14 Oct 2022 05:01:40 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 20/70
16669d6
Fri 14 Oct 2022 05:17:32 PM UTC: 
 heap.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:42:22: error: ‘Heap’ {aka ‘struct Heap’} has no member named ‘capacity’; did you mean ‘capac’?
   42 |   if(pq->size == pq->capacity){
      |                      ^~~~~~~~
      |                      capac
heap.c:43:5: error: ‘capacity’ undeclared (first use in this function)
   43 |     capacity = 2*capacity;
      |     ^~~~~~~~
heap.c:43:5: note: each undeclared identifier is reported only once for each function it appears in
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
heap.c:53:18: error: expected ‘;’ before ‘}’ token
   53 |       i = (i-1)/2
      |                  ^
      |                  ;
   54 |     }
      |     ~             
Compilation failed
0ddd512
Fri 14 Oct 2022 05:17:45 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:42:22: error: ‘Heap’ {aka ‘struct Heap’} has no member named ‘capacity’; did you mean ‘capac’?
   42 |   if(pq->size == pq->capacity){
      |                      ^~~~~~~~
      |                      capac
heap.c:43:5: error: ‘capacity’ undeclared (first use in this function)
   43 |     capacity = 2*capacity;
      |     ^~~~~~~~
heap.c:43:5: note: each undeclared identifier is reported only once for each function it appears in
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
38c003e
Fri 14 Oct 2022 05:18:20 PM UTC: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:43:5: error: ‘capac’ undeclared (first use in this function)
   43 |     capac = 2*capac;
      |     ^~~~~
heap.c:43:5: note: each undeclared identifier is reported only once for each function it appears in
heap.c:44:44: error: ‘capacity’ undeclared (first use in this function)
   44 |     pq->heapArray = realloc(pq->heapArray, capacity);
      |                                            ^~~~~~~~
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
8a97a24
Fri 14 Oct 2022 05:18:38 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:43:21: error: expected identifier before numeric constant
   43 |     pq->capac = pq->2*capac;
      |                     ^
heap.c:44:44: error: ‘capacity’ undeclared (first use in this function)
   44 |     pq->heapArray = realloc(pq->heapArray, capacity);
      |                                            ^~~~~~~~
heap.c:44:44: note: each undeclared identifier is reported only once for each function it appears in
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
32a943f
Fri 14 Oct 2022 05:18:49 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:44:44: error: ‘capacity’ undeclared (first use in this function)
   44 |     pq->heapArray = realloc(pq->heapArray, capacity);
      |                                            ^~~~~~~~
heap.c:44:44: note: each undeclared identifier is reported only once for each function it appears in
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
017e1bd
Fri 14 Oct 2022 05:19:05 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:44:44: error: ‘capac’ undeclared (first use in this function)
   44 |     pq->heapArray = realloc(pq->heapArray, capac);
      |                                            ^~~~~
heap.c:44:44: note: each undeclared identifier is reported only once for each function it appears in
heap.c:46:11: error: ‘size’ undeclared (first use in this function)
   46 |   int i = size;
      |           ^~~~
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
f49618d
Fri 14 Oct 2022 05:19:18 PM UTC: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
heap.c:59:3: error: ‘size’ undeclared (first use in this function)
   59 |   size++;
      |   ^~~~
heap.c:59:3: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
094cde7
Fri 14 Oct 2022 05:19:27 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
806ed77
Fri 14 Oct 2022 05:20:04 PM UTC: 
 heap.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:51:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   51 |       pq->heapArray[(i-1)/2]= elem;
      |                               ^~~~
Compilation failed
cc5c452
Fri 14 Oct 2022 05:57:19 PM UTC: 
 heap.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
c587f02
Fri 14 Oct 2022 05:57:32 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:50:13: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   50 |       aux = elem;
      |             ^~~~
Compilation failed
5cf4241
Fri 14 Oct 2022 05:57:36 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:36:19: error: invalid initializer
   36 |   heapElem elem = (heapElem*)calloc(1,sizeof(heapElem));
      |                   ^
heap.c:39:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   39 |   elem->data = data;
      |       ^~
heap.c:40:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   40 |   elem->priority = priority;
      |       ^~
heap.c:49:12: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   49 |     if(elem->priority > pq->heapArray[(i-1)/2].priority){
      |            ^~
heap.c:55:17: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   55 |     else if(elem->priority < pq->heapArray[(i-1)/2].priority){
      |                 ^~
Compilation failed
f377e4d
Fri 14 Oct 2022 05:57:44 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:36:3: error: conversion to non-scalar type requested
   36 |   heapElem elem = (heapElem)calloc(1,sizeof(heapElem));
      |   ^~~~~~~~
heap.c:39:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   39 |   elem->data = data;
      |       ^~
heap.c:40:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   40 |   elem->priority = priority;
      |       ^~
heap.c:49:12: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   49 |     if(elem->priority > pq->heapArray[(i-1)/2].priority){
      |            ^~
heap.c:55:17: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   55 |     else if(elem->priority < pq->heapArray[(i-1)/2].priority){
      |                 ^~
Compilation failed
26f0f2c
Fri 14 Oct 2022 05:57:55 PM UTC: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:47:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   47 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:52:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   52 |       pq->heapArray[(i-1)/2]= aux;
      |                               ^~~
Compilation failed
61eb862
Fri 14 Oct 2022 05:58:37 PM UTC: 
 heap.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:46:22: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   46 |   pq->heapArray[i] = elem;
      |                      ^~~~
heap.c:50:31: error: incompatible types when assigning to type ‘heapElem’ {aka ‘struct nodo’} from type ‘heapElem *’ {aka ‘struct nodo *’}
   50 |       pq->heapArray[(i-1)/2]= elem;
      |                               ^~~~
Compilation failed
0a6fbcc
Fri 14 Oct 2022 05:59:10 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:36:3: error: conversion to non-scalar type requested
   36 |   heapElem elem = (heapElem)calloc(1,sizeof(heapElem));
      |   ^~~~~~~~
heap.c:38:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   38 |   elem->data = data;
      |       ^~
heap.c:39:7: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   39 |   elem->priority = priority;
      |       ^~
heap.c:48:12: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   48 |     if(elem->priority > pq->heapArray[(i-1)/2].priority){
      |            ^~
heap.c:53:17: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   53 |     else if(elem->priority < pq->heapArray[(i-1)/2].priority){
      |                 ^~
Compilation failed
45d88a1
Fri 14 Oct 2022 05:59:26 PM UTC: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:36:3: error: conversion to non-scalar type requested
   36 |   heapElem elem = (heapElem)calloc(1,sizeof(heapElem));
      |   ^~~~~~~~
heap.c:48:12: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   48 |     if(elem->priority > pq->heapArray[(i-1)/2].priority){
      |            ^~
heap.c:53:17: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   53 |     else if(elem->priority < pq->heapArray[(i-1)/2].priority){
      |                 ^~
Compilation failed
baa6e97
Fri 14 Oct 2022 05:59:38 PM UTC: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
heap.c: In function ‘heap_push’:
heap.c:36:3: error: conversion to non-scalar type requested
   36 |   heapElem elem = (heapElem)calloc(1,sizeof(heapElem));
      |   ^~~~~~~~
heap.c:53:17: error: invalid type argument of ‘->’ (have ‘heapElem’ {aka ‘struct nodo’})
   53 |     else if(elem->priority < pq->heapArray[(i-1)/2].priority){
      |                 ^~
Compilation failed
c6d565a
